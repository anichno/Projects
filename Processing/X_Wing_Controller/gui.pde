/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

void sldThrottle_Change(GVertSlider vertslider) { //_CODE_:sldThrottle:362600:
  quadThrottle = 2000 - vertslider.getValue() + 1000;
} //_CODE_:sldThrottle:362600:

void txtAngleCo_Enter(GTextField textfield) { //_CODE_:txtAngleCo:768463:
//  quadAngleCoUpdate = Float.parseFloat(textfield.viewText());
} //_CODE_:txtAngleCo:768463:

void txtRateCo_Enter(GTextField textfield) { //_CODE_:txtRateCo:445924:
//  quadRateCoUpdate = Float.parseFloat(textfield.viewText());
} //_CODE_:txtRateCo:445924:

void btnQuickStop_Click(GButton button) { //_CODE_:btnQuickStop:977670:
  quadThrottle = 1000;
  sldThrottle.setValue(2000);
} //_CODE_:btnQuickStop:977670:

void btnSendUpdate_Click(GButton button) { //_CODE_:btnSendUpdate:670325:
  quadAngleCo = Float.parseFloat(txtAngleCo.viewText());
  quadRateCo = Float.parseFloat(txtRateCo.viewText());
} //_CODE_:btnSendUpdate:670325:

void txtRoll_Enter(GTextField textfield) { //_CODE_:txtRoll:871045:
//  println("txtRoll - GTextField event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:txtRoll:871045:

void txtPitch_Enter(GTextField textfield) { //_CODE_:txtPitch:882481:
//  println("txtPitch - GTextField event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:txtPitch:882481:

void btnSendControl_Click(GButton button) { //_CODE_:btnSendControl:476477:
  quadRollAngle = Float.parseFloat(txtRoll.viewText());
  quadPitchAngle = Float.parseFloat(txtPitch.viewText());
} //_CODE_:btnSendControl:476477:

void txtPitchTrim_Enter(GTextField textfield) { //_CODE_:txtPitchTrim:673439:
//  println("textfield1 - GTextField event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:txtPitchTrim:673439:

void txtRollTrim_Enter(GTextField textfield) { //_CODE_:txtRollTrim:553314:
//  println("textfield2 - GTextField event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:txtRollTrim:553314:

void btnUpdateTrim_Click(GButton button) { //_CODE_:btnUpdateTrim:238441:
  trimRoll = Float.parseFloat(txtRollTrim.viewText());
  trimPitch = Float.parseFloat(txtPitchTrim.viewText());
} //_CODE_:btnUpdateTrim:238441:

void btnRequestDebug_Click(GButton button) { //_CODE_:btnRequestDebug:736212:
  requestDebug = true;
} //_CODE_:btnRequestDebug:736212:



// Create all the GUI controls. 
// autogenerated do not edit
void createGUI(){
  G4P.setColorScheme(this, GCScheme.BLUE_SCHEME);
  G4P.messagesEnabled(false);
  sldThrottle = new GVertSlider(this, 48, 55, 12, 200);
  sldThrottle.setLimits(2000, 1000, 2000);
  sldThrottle.addEventHandler(this, "sldThrottle_Change");
  txtAngleCo = new GTextField(this, "0", 110, 105, 80, 20, false);
  txtAngleCo.addEventHandler(this, "txtAngleCo_Enter");
  txtRateCo = new GTextField(this, "0", 110, 158, 80, 20, false);
  txtRateCo.addEventHandler(this, "txtRateCo_Enter");
  btnQuickStop = new GButton(this, "STOP", 16, 264, 80, 30);
  btnQuickStop.setTextAlign(GAlign.CENTER | GAlign.MIDDLE);
  btnQuickStop.addEventHandler(this, "btnQuickStop_Click");
  lblAngleCo = new GLabel(this, "Angle Coeficient", 110, 85, 80, 20);
  lblRateCo = new GLabel(this, "Rate Coeficient", 110, 137, 80, 20);
  btnSendUpdate = new GButton(this, "Send Coeficient Update", 91, 186, 113, 30);
  btnSendUpdate.setTextAlign(GAlign.CENTER | GAlign.MIDDLE);
  btnSendUpdate.addEventHandler(this, "btnSendUpdate_Click");
  txtRoll = new GTextField(this, "0", 224, 157, 80, 20, false);
  txtRoll.addEventHandler(this, "txtRoll_Enter");
  txtPitch = new GTextField(this, "0", 224, 115, 80, 20, false);
  txtPitch.addEventHandler(this, "txtPitch_Enter");
  lblPitch = new GLabel(this, "Pitch", 224, 92, 80, 21);
  lblRoll = new GLabel(this, "Roll", 224, 137, 80, 20);
  btnSendControl = new GButton(this, "Send Control Update", 214, 186, 100, 30);
  btnSendControl.setTextAlign(GAlign.CENTER | GAlign.MIDDLE);
  btnSendControl.addEventHandler(this, "btnSendControl_Click");
  lblPitchTrim = new GLabel(this, "Pitch Trim", 332, 93, 80, 20);
  txtPitchTrim = new GTextField(this, "0", 332, 114, 80, 20, false);
  txtPitchTrim.addEventHandler(this, "txtPitchTrim_Enter");
  lblRollTrim = new GLabel(this, "Roll Trim", 332, 135, 80, 20);
  txtRollTrim = new GTextField(this, "0", 332, 156, 80, 20, false);
  txtRollTrim.addEventHandler(this, "txtRollTrim_Enter");
  btnUpdateTrim = new GButton(this, "Update Trim", 331, 185, 80, 30);
  btnUpdateTrim.setTextAlign(GAlign.CENTER | GAlign.MIDDLE);
  btnUpdateTrim.addEventHandler(this, "btnUpdateTrim_Click");
  lblDebug = new GLabel(this, "", 0, 298, 480, 20);
  btnRequestDebug = new GButton(this, "Request Debug", 393, 267, 80, 30);
  btnRequestDebug.setTextAlign(GAlign.CENTER | GAlign.MIDDLE);
  btnRequestDebug.addEventHandler(this, "btnRequestDebug_Click");
}

// Variable declarations 
// autogenerated do not edit
GVertSlider sldThrottle; 
GTextField txtAngleCo; 
GTextField txtRateCo; 
GButton btnQuickStop; 
GLabel lblAngleCo; 
GLabel lblRateCo; 
GButton btnSendUpdate; 
GTextField txtRoll; 
GTextField txtPitch; 
GLabel lblPitch; 
GLabel lblRoll; 
GButton btnSendControl; 
GLabel lblPitchTrim; 
GTextField txtPitchTrim; 
GLabel lblRollTrim; 
GTextField txtRollTrim; 
GButton btnUpdateTrim; 
GLabel lblDebug; 
GButton btnRequestDebug; 

